swagger: "2.0"
info:
  version: "0.0.1"
  title: Song Listings
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /availableDates:
    # binds a127 app logic to a route
    x-swagger-router-controller: availableDates
    get:
      description: Retuns next 7 available dates
      # used as the method name of the controller
      operationId: getAvailableDates
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
              description: available date in YYYYMMDD format
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /songs/:
    # binds a127 app logic to a route
    x-swagger-router-controller: song
    get:
      description: Retuns list of songs available for a specific day filtered by search term
      parameters:
        - in: query
          name: requestDate
          type: string
          description: Requested Date in YYYYMMDD. Placeholder for enhancement
        - in: query
          name: searchTerm
          type: string
          description: Searched againts movie name & song name. All matching entry with either movie name containing the term or the song name containing the term will be returned
      # used as the method name of the controller
      operationId: searchSongByName
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              # a pointer to a definition
              $ref: "#/definitions/Song"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /song/{id}:
    x-swagger-router-controller: song
    get: 
      parameters:
        - in: path
          name: id
          type: string
          required: true
      operationId: getSong
      responses:
        '200':
          description: Success
          schema: 
            $ref: "#/definitions/Song"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Song:
    properties:
      Title:
        type: string
      MovieTitle:
        type: string
      NoInTheMovie:
        type: string
      Length:
        type: string
      MusicBy:
        type: string
      Singers:
        type: string
      Starring:
        type: string
      MoviePosterUrl:
        type: string
      Cinematography:
        type: string
      ProductionCompany:
        type: string
      WrittenBy:
        type: string
      DirectedBy:
        type: string
      DistributedBy:
        type: string
      EditedBy:
        type: string
      Language:
        type: string
      MovieUrl:
        type: string
      ReleaseDate:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string